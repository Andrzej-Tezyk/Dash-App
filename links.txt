https://dash.plotly.com/dash-core-components/graph -> dash Graph

https://dash.plotly.com/interactive-graphing -> dash guide to interactive visualizations

https://dash.plotly.com/urls -> dash multipage apps


https://plotly.com/python/creating-and-updating-figures/?_gl=1*k30ank*_gcl_au*Njg0ODEwNTg5LjE3MzgzMzYwMzk.*_ga*NDM0MDgzNjgzLjE3MzgzMzYwNDA.*_ga_6G7EE0JNSC*MTc0MDY2OTMwMS4xMS4wLjE3NDA2NjkzMDEuNjAuMC4w -> figures in plotly in depth

https://plotly.com/python/histograms/?_gl=1*1x908t9*_gcl_au*Njg0ODEwNTg5LjE3MzgzMzYwMzk.*_ga*NDM0MDgzNjgzLjE3MzgzMzYwNDA.*_ga_6G7EE0JNSC*MTc0MDY2OTMwMS4xMS4xLjE3NDA2Njk1MDAuNjAuMC4w -> plotly indepth guide for histograms (search for similar for other plot types)

https://plotly.com/python-api-reference/plotly.express.html?_gl=1*15qnclq*_gcl_au*Njg0ODEwNTg5LjE3MzgzMzYwMzk.*_ga*NDM0MDgzNjgzLjE3MzgzMzYwNDA.*_ga_6G7EE0JNSC*MTc0MDY2OTMwMS4xMS4xLjE3NDA2Njk1MTcuNDMuMC4w -> plotly API documentation
https://plotly.com/python/reference/?_gl=1*15qnclq*_gcl_au*Njg0ODEwNTg5LjE3MzgzMzYwMzk.*_ga*NDM0MDgzNjgzLjE3MzgzMzYwNDA.*_ga_6G7EE0JNSC*MTc0MDY2OTMwMS4xMS4xLjE3NDA2Njk1MTcuNDMuMC4w -> plotly more docs

https://plotly.com/python/renderers/?_gl=1*3sevg8*_gcl_au*Njg0ODEwNTg5LjE3MzgzMzYwMzk.*_ga*NDM0MDgzNjgzLjE3MzgzMzYwNDA.*_ga_6G7EE0JNSC*MTc0MDY2OTMwMS4xMS4xLjE3NDA2Njk1OTMuNDMuMC4w -> plotly displaing figures tutoria



How to preserve the UI state (zoom level etc.) of a Graph when updating the Graph in a callback -> https://community.plot.ly/t/preserving-ui-state-like-zoom-in-dcc-graph-with-uirevision/15793
Graph transitions for smooth transitions or animations on Graph updates -> https://community.plot.ly/t/exploring-a-transitions-api-for-dcc-graph/15468



https://plotly.com/javascript/?_gl=1*faqh3n*_gcl_au*Njg0ODEwNTg5LjE3MzgzMzYwMzk.*_ga*NDM0MDgzNjgzLjE3MzgzMzYwNDA.*_ga_6G7EE0JNSC*MTc0MDY2OTMwMS4xMS4xLjE3NDA2NzE2OTAuNjAuMC4w -> js library used to render Graphs; by default a specific version of the js library is included in py library, but can be overwritten
- can modified when there is a need to use newer or older version for js package (is usulally backward compatible)
- IMPORTANT: get only parts of js library you need to optimize your app! (another usecase; partial bundles can be found on the Internet)




"""
https://dash.plotly.com/basic-callbacks -> callback tutorial

Loading data into memory can be expensive. 
By loading querying data at the start of the app instead of inside the callback functions, we ensure that this operation is only done once -- when the app server starts. 
When a user visits the app or interacts with the app, that data (df) is already in memory. 
If possible, expensive initialization (like downloading or querying data) should be done in the global scope of the app instead of within the callback functions.


The callback does not modify the original data, it only creates copies of the dataframe by filtering using pandas. 
This is important: your callbacks should never modify variables outside of their scope. 
If your callbacks modify global state, then one user's session might affect the next user's session and when the app 
is deployed on multiple processes or threads, those modifications will not be shared across sessions.


add layout.transition

A word of caution: it's not always a good idea to combine outputs, even if you can:

If the outputs depend on some, but not all, of the same inputs, then keeping them separate can avoid unnecessary updates.
If the outputs have the same inputs but they perform very different computations with these inputs, keeping the callbacks separate can allow them to run in parallel.


You can also chain outputs and inputs together: the output of one callback function could be the input of another callback function.
"""